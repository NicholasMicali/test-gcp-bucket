name: Terraform Plan with Inkdrop (Docker)

on:
  pull_request:

permissions:
  contents: write
  pull-requests: write

jobs:
  render-inkdrop:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Verify plan.out exists at repo root
        run: test -f plan.out || (echo "plan.out not found at repo root" && exit 1)

      - name: Render SVG via Inkdrop Docker
        run: |
          # Inkdrop wants to run from the TF root. We mount the repo to /tfroot
          docker run --rm \
            -v "$PWD:/tfroot" \
            -w /tfroot \
            inkdroporg/inkdrop:latest \
            plan.out --ci --debug

          # The CLI writes an SVG in the working directory; ensure we have it
          ls -l | grep -E '\.svg$' || (echo "No SVG produced" && exit 1)

      - name: Upload diagram artifact
        uses: actions/upload-artifact@v4
        with:
          name: inkdrop-diagram
          path: ./*.svg

      - name: Comment SVG on PR
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            const svgs = fs.readdirSync(process.cwd()).filter(f => f.endsWith('.svg'));
            if (svgs.length === 0) {
              core.setFailed('No SVGs found to comment'); return;
            }
            const body = [
              '### Inkdrop Diagram',
              '',
              ...svgs.map(f => `<details><summary>${f}</summary>\n\n<img src="https://raw.githubusercontent.com/${context.repo.owner}/${context.repo.repo}/${context.payload.pull_request.head.sha}/${f}" alt="${f}" />\n\n</details>`),
            ].join('\n');

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body
            });

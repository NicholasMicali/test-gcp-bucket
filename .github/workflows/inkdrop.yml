name: Terraform Plan with Inkdrop (Docker)

on:
  pull_request:

permissions:
  contents: write
  pull-requests: write

jobs:
  inkdrop:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Ensure the working dir is initialized so terraform graph can resolve providers
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.0

      - name: Terraform init (no backend)
        run: terraform init -backend=false

      - name: Verify plan artifact exists at repo root
        run: test -f plan.out || (echo "plan.out not found at repo root" && exit 1)

      # Render the SVG using Inkdrop's Docker image. Do NOT set -w; entrypoint does 'cd tfroot'.
      - name: Render SVG via Inkdrop Docker
        run: |
          docker run --rm \
            -v "$PWD:/tfroot" \
            -e TF_VERSION=1.8.0 \
            inkdroporg/inkdrop:latest \
            plan.out --ci --debug

      - name: Upload diagram artifact
        uses: actions/upload-artifact@v4
        with:
          name: inkdrop-diagram
          path: ./*.svg

      - name: Comment SVG on PR
        if: ${{ github.event.pull_request.head.repo.fork == false }}
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const svgs = fs.readdirSync(process.cwd()).filter(f => f.endsWith('.svg'));
            if (svgs.length === 0) { core.setFailed('No SVG produced'); return; }
            const body = [
              '### Inkdrop Diagram',
              '',
              ...svgs.map(f => `![${f}](./${f})`)
            ].join('\n');
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body
            });
